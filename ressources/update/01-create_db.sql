-- Création de la base de données de ArcCompetition
-- @author Aurélien JEOFFRAY

CREATE TABLE IF NOT EXISTS PARAM (
		DBVERSION				INTEGER NOT NULL,
		APPREVISION				INTEGER NOT NULL,
		DEFAULT_LANG			VARCHAR(5) NOT NULL DEFAULT 'fr',
		DBUUID UUID				NOT NULL DEFAULT RANDOM_UUID()
	);
INSERT INTO PARAM (DBVERSION, APPREVISION, DEFAULT_LANG) VALUES (1, 1, 'fr');

-- Aide à la saisie - Ville et code postal
CREATE TABLE IF NOT EXISTS VILLE (
	    CODE_VILLE UUID			DEFAULT RANDOM_UUID(),
	    INSEE					VARCHAR(5) NOT NULL,
	    NOM						VARCHAR(100),
	    UPPER_NAME				VARCHAR(100) as UPPER(NOM),
	    ALTITUDE				VARCHAR(25),
	    LONGITUDE_RADIAN		VARCHAR(50),
	    LATITUDE_RADIAN			VARCHAR(50),
	    POP99					VARCHAR(25),
	    SURFACE					VARCHAR(25),
	    PAYS					VARCHAR(2),
	    
	    PRIMARY KEY(CODE_VILLE)
	); 
CREATE INDEX IF NOT EXISTS I_VILLE_NOM ON VILLE (NOM ASC);
CREATE INDEX IF NOT EXISTS I_VILLE_UPPER_NAME ON VILLE (UPPER_NAME ASC);
CREATE INDEX IF NOT EXISTS I_VILLE_PAYS ON VILLE (PAYS ASC);

CREATE TABLE IF NOT EXISTS CODE_POSTAL (
		CODE_POSTAL				VARCHAR(5),
		CODE_VILLE				UUID NOT NULL,
		
		PRIMARY KEY (CODE_POSTAL,CODE_VILLE),
		FOREIGN KEY(CODE_VILLE) REFERENCES VILLE (CODE_VILLE) ON DELETE CASCADE ON UPDATE CASCADE
	);
CREATE INDEX IF NOT EXISTS I_CODE_POSTAL_CODE_POSTAL ON CODE_POSTAL (CODE_POSTAL ASC);

-- Tables de références
CREATE TABLE IF NOT EXISTS LIBELLE (
		ID_LIBELLE				UUID NOT NULL DEFAULT RANDOM_UUID(),
		LANG					VARCHAR(5),
		LIBELLE					VARCHAR(255),
		
		PRIMARY KEY (ID_LIBELLE, LANG)
	);

CREATE TABLE CATEGORIE_REGLEMENT (
		NUMCATEGORIE_REGLEMENT	INTEGER AUTO_INCREMENT NOT NULL,
		NOMCATEGORIE			VARCHAR(128),
		
		PRIMARY KEY (NUMCATEGORIE_REGLEMENT)
	);
	
CREATE TABLE BLASON (
		ID_BLASON				UUID NOT NULL DEFAULT RANDOM_UUID(),
		NOM						VARCHAR(32) NOT NULL,
		HORIZONTAL_RATIO		DOUBLE NOT NULL,
		VERTICAL_RATIO			DOUBLE NOT NULL,
		NBARCHER				INTEGER NOT NULL,
		ORDRE					INTEGER NOT NULL,
		IMAGE					VARCHAR(64) NOT NULL DEFAULT '',
		
		PRIMARY KEY (ID_BLASON)
	);

CREATE TABLE ANCRAGE_BLASON (
		ID_BLASON				UUID NOT NULL,
		EMPLACEMENT				INTEGER NOT NULL,
		ANCRAGEX				DOUBLE NOT NULL,
		ANCRAGEY				DOUBLE NOT NULL,
		
		PRIMARY KEY (ID_BLASON, EMPLACEMENT),
		FOREIGN KEY (ID_BLASON) REFERENCES BLASON (ID_BLASON) ON UPDATE CASCADE ON DELETE CASCADE
	);
	
CREATE TABLE IF NOT EXISTS CATEGORIE_CONTACT (
		ID_CATEGORIE_CONTACT	UUID NOT NULL DEFAULT RANDOM_UUID(),
		ID_LIBELLE				UUID NOT NULL,
		
		PRIMARY KEY (ID_CATEGORIE_CONTACT)
	);
	
CREATE TABLE IF NOT EXISTS CIVILITY (
		ID_CIVILITY				UUID NOT NULL DEFAULT RANDOM_UUID(),
		ABREVIATION				VARCHAR(10),
		LIBELLE					VARCHAR(64),
		MORALE					BOOLEAN NOT NULL DEFAULT FALSE,
		
		PRIMARY KEY (ID_CIVILITY)
	);
	
CREATE TABLE IF NOT EXISTS REPARTITION_PHASE_FINALE (
		NUM_REPARTITION_PHASE_FINALE	SMALLINT NOT NULL,
		NUM_TYPE_REPARTITION			SMALLINT NOT NULL,
		NUM_ORDRE						SMALLINT NOT NULL,
		
		PRIMARY KEY (NUM_REPARTITION_PHASE_FINALE, NUM_TYPE_REPARTITION)
	);

-- Entités
CREATE TABLE IF NOT EXISTS ENTITE (
		ID_ENTITE			UUID NOT NULL DEFAULT RANDOM_UUID(),
		NOM					VARCHAR(64) NOT NULL,
		TYPEENTITE			INTEGER NOT NULL,
		ID_ENTITE_PARENT	UUID,
		REFERENCE			VARCHAR(64),
		
		ADRESSE				CLOB,
		CODEPOSTAL			VARCHAR(5),
		VILLE				VARCHAR(64),
		PAYS				VARCHAR(2),
		
		NOTE				CLOB,
		
		ID_ENTITE_PROPRIETAIRE	UUID,
		
		LOGO				VARCHAR(255),
		
		DATEMODIF			DATE DEFAULT CURRENT_DATE(),
		REMOVABLE			BOOLEAN NOT NULL DEFAULT TRUE,
		UPPER_VILLE			VARCHAR(64) AS UPPER(VILLE),
		
		PRIMARY KEY (ID_ENTITE),
		FOREIGN KEY (ID_ENTITE_PARENT) REFERENCES ENTITE (ID_ENTITE) ON UPDATE CASCADE ON DELETE RESTRICT,
		FOREIGN KEY (ID_ENTITE_PROPRIETAIRE) REFERENCES ENTITE (ID_ENTITE) ON UPDATE CASCADE ON DELETE CASCADE
	);
CREATE INDEX IF NOT EXISTS I_ENTITE_NOM			ON ENTITE (NOM ASC);
CREATE INDEX IF NOT EXISTS I_ENTITE_REFERENCE	ON ENTITE (REFERENCE ASC);
CREATE INDEX IF NOT EXISTS I_ENTITE_VILLE		ON ENTITE (VILLE ASC);
CREATE INDEX IF NOT EXISTS I_ENTITE_UPPER_VILLE	ON ENTITE (UPPER_VILLE ASC);

--Contacts
CREATE TABLE IF NOT EXISTS CONTACT (
		ID_CONTACT			UUID NOT NULL DEFAULT RANDOM_UUID(),
		NAME				VARCHAR(128) NOT NULL,
		FIRSTNAME			VARCHAR(128),
		DATENAISS			DATE,
		SEXE				INTEGER,
		ID_CIVILITY			UUID,
		ADDRESS				VARCHAR(255),
		ZIP_CODE			VARCHAR(10),
		CITY				VARCHAR(64),
		COUNTRY				VARCHAR(2) DEFAULT 'fr',
		NOTE				TEXT,
		
		ID_ENTITE			UUID,
		
		--Pour le Web
		IDENTIFIANT			VARCHAR(128),
		MOT_DE_PASSE		VARCHAR(255),
		TOKEN_IDP_EXTERNE	VARCHAR(255),
		
		--Options
		LANGUAGE			VARCHAR(5),
		SURBRILLANCE_EXAEQUO	BOOLEAN,
		SAISI_NON_CUMULE	BOOLEAN,
		
		DATEMODIF			DATE DEFAULT CURRENT_DATE(),
		
		UPPER_NAME			VARCHAR(128) as UPPER(NAME),
		
		PRIMARY KEY (ID_CONTACT),
		FOREIGN KEY (ID_CIVILITY) REFERENCES CIVILITY (ID_CIVILITY) ON UPDATE CASCADE ON DELETE CASCADE,
		FOREIGN KEY (ID_ENTITE) REFERENCES ENTITE (ID_ENTITE) ON UPDATE CASCADE ON DELETE CASCADE
	);
CREATE INDEX IF NOT EXISTS I_NAME ON CONTACT (NAME ASC);
CREATE INDEX IF NOT EXISTS I_UPPER_NAME ON CONTACT (UPPER_NAME ASC);
CREATE INDEX IF NOT EXISTS I_FIRSTNAME ON CONTACT (FIRSTNAME ASC);

CREATE TABLE IF NOT EXISTS COORDINATE (
		ID_COORDINATE			UUID NOT NULL DEFAULT RANDOM_UUID(),
		ID_CONTACT				UUID NOT NULL,
		CODE_COORDINATE_TYPE	VARCHAR(16),
		"VALUE"					VARCHAR(64),
		
		PRIMARY KEY (ID_COORDINATE),
		FOREIGN KEY (ID_CONTACT) REFERENCES CONTACT (ID_CONTACT) ON UPDATE CASCADE ON DELETE CASCADE
	);

CREATE TABLE IF NOT EXISTS ASSOCIER_CATEGORIE_CONTACT (
		ID_CONTACT				UUID NOT NULL,
		ID_CATEGORIE_CONTACT	UUID NOT NULL,
		
		PRIMARY KEY (ID_CONTACT, ID_CATEGORIE_CONTACT),
		FOREIGN KEY (ID_CONTACT) REFERENCES CONTACT (ID_CONTACT) ON UPDATE CASCADE ON DELETE CASCADE,
		FOREIGN KEY (ID_CATEGORIE_CONTACT) REFERENCES CATEGORIE_CONTACT (ID_CATEGORIE_CONTACT) ON UPDATE CASCADE ON DELETE CASCADE
	);

--Fédération
CREATE TABLE IF NOT EXISTS FEDERATION (
		ID_ENTITE	UUID NOT NULL,
		NOM			VARCHAR(128),
		SIGLE		VARCHAR(32),
		
		PRIMARY KEY (ID_ENTITE),
		FOREIGN KEY (ID_ENTITE) REFERENCES ENTITE (ID_ENTITE) ON UPDATE CASCADE ON DELETE RESTRICT
	);
	
CREATE TABLE TYPE_EQUIPE (
		CODETYPEEQUIPE	VARCHAR(16),
		ID_ENTITE		UUID,
		LANG			VARCHAR(5),
		LIBELLE			VARCHAR(64),
		
		PRIMARY KEY (CODETYPEEQUIPE, ID_ENTITE, LANG),
		FOREIGN KEY (ID_ENTITE) REFERENCES FEDERATION (ID_ENTITE) ON UPDATE CASCADE ON DELETE CASCADE
	);
	
--Archer
CREATE TABLE IF NOT EXISTS ARCHER (
		ID_CONTACT			UUID NOT NULL,
		NUMLICENCEARCHER	VARCHAR(32),
		CERTIFMEDICAL		DATE NULL,
		ID_JEUX_CRITERES_DISCRIMINANT UUID,
		CATEGORIE			INTEGER,
		NIVEAU				INTEGER,
		ARC					INTEGER,
		
		PRIMARY KEY (ID_CONTACT),
		FOREIGN KEY (ID_CONTACT) REFERENCES CONTACT (ID_CONTACT) ON UPDATE CASCADE ON DELETE CASCADE,
		FOREIGN KEY (ID_JEUX_CRITERES_DISCRIMINANT) REFERENCES JEUX_CRITERES_DISCRIMINANT (ID_JEUX_CRITERES_DISCRIMINANT) ON UPDATE CASCADE ON DELETE RESTRICT
	);
--CREATE INDEX IF NOT EXISTS I_NUMLICENCEARCHER ON ARCHERS (NUMLICENCEARCHER ASC);
	
--Réglement
CREATE TABLE REGLEMENT (
		ID_REGLEMENT		UUID NOT NULL DEFAULT RANDOM_UUID(),
		NOM					VARCHAR(64),
		DESCRIPTION			VARCHAR(255),
		NBSERIE				INTEGER,
		NBVOLEEPARSERIE 	INTEGER,
		NBFLECHEPARVOLEE	INTEGER,
		NBPOINTSPARFLECHE	INTEGER,
		NBMEMBRESEQUIPE		INTEGER,
		NBMEMBRESRETENU		INTEGER,
		ISOFFICIAL			BOOLEAN,
		
		ID_ENTITE			UUID NOT NULL,
		NUMCATEGORIE_REGLEMENT INTEGER NOT NULL,
		TYPEREGLEMENT		VARCHAR(10) NOT NULL DEFAULT 'TARGET',
		REMOVABLE			BOOLEAN,
		PRIMARY KEY (ID_REGLEMENT),
		FOREIGN KEY (ID_ENTITE) REFERENCES ENTITE (ID_ENTITE) ON UPDATE CASCADE ON DELETE RESTRICT,
		FOREIGN KEY (NUMCATEGORIE_REGLEMENT) REFERENCES CATEGORIE_REGLEMENT (NUMCATEGORIE_REGLEMENT) ON UPDATE CASCADE ON DELETE RESTRICT
	);
CREATE INDEX I_NOM_REGLEMENT ON REGLEMENT (NOM ASC);
	
CREATE TABLE IF NOT EXISTS CRITERE_DISCRIMINANT (
		ID_CRITERE_DISCRIMINANT				UUID NOT NULL DEFAULT RANDOM_UUID(),
		NOM									VARCHAR(64),
		CODE								VARCHAR(16),
		ORDRE								INTEGER,
		ID_ENTITE							UUID,
		ID_CRITERE_DISCRIMINANT_REFERENCE	UUID,
		
		PRIMARY KEY (ID_CRITERE_DISCRIMINANT),
		FOREIGN KEY (ID_ENTITE) REFERENCES FEDERATION (ID_ENTITE) ON UPDATE CASCADE ON DELETE CASCADE,
		FOREIGN KEY (ID_CRITERE_DISCRIMINANT_REFERENCE) REFERENCES CRITERE_DISCRIMINANT (ID_CRITERE_DISCRIMINANT) ON UPDATE CASCADE ON DELETE SET NULL
	);
CREATE INDEX IF NOT EXISTS I_CRITERE_DISCRIMINANT_ORDRE ON CRITERE_DISCRIMINANT (ORDRE ASC);
	
CREATE TABLE IF NOT EXISTS ELEMENT_CRITERE_DISCRIMINANT (
		ID_ELEMENT_CRITERE_DISCRIMINANT				UUID NOT NULL DEFAULT RANDOM_UUID(),
		CODE										VARCHAR(16) NOT NULL,
		NOM											VARCHAR(64) NOT NULL,
		ORDRE										INTEGER NOT NULL,
		ID_CRITERE_DISCRIMINANT						UUID NOT NULL,
		ID_ELEMENT_CRITERE_DISCRIMINANT_REFERENCE	UUID,
		
		PRIMARY KEY (ID_ELEMENT_CRITERE_DISCRIMINANT),
		FOREIGN KEY (ID_CRITERE_DISCRIMINANT) REFERENCES CRITERE_DISCRIMINANT (ID_CRITERE_DISCRIMINANT) ON UPDATE CASCADE ON DELETE CASCADE,
		FOREIGN KEY (ID_ELEMENT_CRITERE_DISCRIMINANT_REFERENCE) REFERENCES ELEMENT_CRITERE_DISCRIMINANT (ID_ELEMENT_CRITERE_DISCRIMINANT) ON UPDATE CASCADE ON DELETE SET NULL
	);
	
CREATE TABLE IF NOT EXISTS JEUX_DISTANCES_BLASONS (
		ID_JEUX_DISTANCES_BLASONS	UUID NOT NULL DEFAULT RANDOM_UUID(),
		ID_REGLEMENT				UUID NOT NULL,
		NOM							VARCHAR(64) NOT NULL,
		
		PRIMARY KEY (ID_JEUX_DISTANCES_BLASONS),
		FOREIGN KEY (ID_REGLEMENT) REFERENCES REGLEMENT (ID_REGLEMENT) ON UPDATE CASCADE ON DELETE CASCADE
	);
	
CREATE TABLE IF NOT EXISTS DISTANCE_BLASONS (
		ID_DISTANCE_BLASONS			UUID NOT NULL DEFAULT RANDOM_UUID(),
		DISTANCE					DOUBLE NOT NULL,
		SERIE						INTEGER NOT NULL,
		ID_JEUX_DISTANCES_BLASONS	UUID NOT NULL,
		
		PRIMARY KEY (ID_DISTANCE_BLASONS),
		FOREIGN KEY (ID_JEUX_DISTANCES_BLASONS) REFERENCES JEUX_DISTANCES_BLASONS (ID_JEUX_DISTANCES_BLASONS) ON UPDATE CASCADE ON DELETE CASCADE
	);
	
CREATE TABLE IF NOT EXISTS BLASON_DISTANCE_BLASONS (
		ID_BLASON_DISTANCE_BLASONS	UUID NOT NULL DEFAULT RANDOM_UUID(),
		ID_DISTANCE_BLASONS			UUID NOT NULL,
		ID_BLASON					UUID NOT NULL,
		PRINCIPAL					BOOLEAN NOT NULL DEFAULT FALSE,
		
		PRIMARY KEY (ID_BLASON_DISTANCE_BLASONS),
		FOREIGN KEY (ID_BLASON) REFERENCES BLASON (ID_BLASON) ON UPDATE CASCADE ON DELETE RESTRICT,
		FOREIGN KEY (ID_DISTANCE_BLASONS) REFERENCES DISTANCE_BLASONS (ID_DISTANCE_BLASONS) ON UPDATE CASCADE ON DELETE CASCADE
	);
	
CREATE TABLE IF NOT EXISTS CRITERE_CLASSEMENT (
		ID_CRITERE_CLASSEMENT		UUID NOT NULL DEFAULT RANDOM_UUID(),
		NOM							VARCHAR(128) NOT NULL,
		CRITERE_EQUIPE				BOOLEAN NOT NULL DEFAULT 0,
		--Si Critere equipe
		ID_REGLEMENT				UUID,
		--Si Critere individuel
		ID_JEUX_DISTANCES_BLASONS	UUID, 
		
		ORDRE INTEGER,
		
		PRIMARY KEY (ID_CRITERE_CLASSEMENT),
		FOREIGN KEY (ID_REGLEMENT) REFERENCES REGLEMENT (ID_REGLEMENT) ON UPDATE CASCADE ON DELETE CASCADE,
		FOREIGN KEY (ID_JEUX_DISTANCES_BLASONS) REFERENCES JEUX_DISTANCES_BLASONS (ID_JEUX_DISTANCES_BLASONS) ON UPDATE CASCADE ON DELETE CASCADE
	);
	
CREATE TABLE IF NOT EXISTS JEUX_CRITERES_DISCRIMINANT (
		ID_JEUX_CRITERES_DISCRIMINANT	UUID NOT NULL DEFAULT RANDOM_UUID(),
		ID_CRITERE_CLASSEMENT			UUID,
		
		PRIMARY KEY (ID_JEUX_CRITERES_DISCRIMINANT),
		FOREIGN KEY (ID_CRITERE_CLASSEMENT) REFERENCES CRITERE_CLASSEMENT (ID_CRITERE_CLASSEMENT) ON UPDATE CASCADE ON DELETE CASCADE
	);
	
CREATE TABLE IF NOT EXISTS ELEMENT_JEUX_CRITERES_DISCRIMINANT (
		ID_JEUX_CRITERES_DISCRIMINANT	UUID NOT NULL,
		ID_ELEMENT_CRITERE_DISCRIMINANT	UUID NOT NULL,
		ORDRE							INTEGER NOT NULL,
		
		PRIMARY KEY (ID_JEUX_CRITERES_DISCRIMINANT, ID_ELEMENT_CRITERE_DISCRIMINANT),
		FOREIGN KEY (ID_JEUX_CRITERES_DISCRIMINANT) REFERENCES JEUX_CRITERES_DISCRIMINANT (ID_JEUX_CRITERES_DISCRIMINANT) ON UPDATE CASCADE ON DELETE CASCADE,
		FOREIGN KEY (ID_ELEMENT_CRITERE_DISCRIMINANT) REFERENCES ELEMENT_CRITERE_DISCRIMINANT (ID_ELEMENT_CRITERE_DISCRIMINANT) ON UPDATE CASCADE ON DELETE CASCADE
	);
	
CREATE TABLE DEPARTAGE (
		ID_DEPARTAGE	UUID NOT NULL DEFAULT RANDOM_UUID(),
		ID_REGLEMENT	UUID NOT NULL, 
		FIELDNAME		VARCHAR(64),
		NUMORDRE		INT NOT NULL,
		
		PRIMARY KEY (ID_DEPARTAGE),
		FOREIGN KEY (ID_REGLEMENT) REFERENCES REGLEMENT (ID_REGLEMENT) ON UPDATE CASCADE ON DELETE CASCADE
	);
	
--Compétition
CREATE TABLE NIVEAU_COMPETITION (
		ID_NIVEAU_COMPETITION		UUID NOT NULL DEFAULT RANDOM_UUID(),
		ID_ENTITE					UUID,
		ID_LIBELLE					UUID,
		DEFAUT						BOOLEAN,
		ORDRE						INTEGER,
		
		PRIMARY KEY (ID_NIVEAU_COMPETITION),
		FOREIGN KEY (ID_ENTITE) REFERENCES ENTITE (ID_ENTITE) ON UPDATE CASCADE ON DELETE CASCADE
	);
	
CREATE TABLE IF NOT EXISTS COMPETITION (
		ID_COMPETITION			UUID NOT NULL DEFAULT RANDOM_UUID(),
		ID_REGLEMENT			UUID NOT NULL,
		ID_ORGANISATEUR			UUID NOT NULL,
		
		LIEU					VARCHAR(128),
		DATE_DEBUT				DATE,
		DATE_FIN				DATE,
		DUEL					BOOLEAN NOT NULL DEFAULT TRUE,
		
		ID_NIVEAU_COMPETITION	UUID,
		
		PRIMARY KEY (ID_COMPETITION),
		FOREIGN KEY (ID_REGLEMENT) REFERENCES REGLEMENT (ID_REGLEMENT) ON UPDATE CASCADE ON DELETE RESTRICT,
		FOREIGN KEY (ID_ORGANISATEUR) REFERENCES ENTITE (ID_ENTITE) ON UPDATE CASCADE ON DELETE RESTRICT,
		FOREIGN KEY (ID_NIVEAU_COMPETITION) REFERENCES NIVEAU_COMPETITION (ID_NIVEAU_COMPETITION) ON UPDATE CASCADE ON DELETE RESTRICT
	);
ALTER TABLE REGLEMENT ADD ID_COMPETITION UUID;
ALTER TABLE REGLEMENT ADD FOREIGN KEY (ID_COMPETITION) REFERENCES COMPETITION (ID_COMPETITION) ON UPDATE CASCADE ON DELETE CASCADE;

CREATE TABLE IF NOT EXISTS COMPETITION_JUDGE (
		ID_COMPETITION			UUID NOT NULL,
		ID_CONTACT				UUID NOT NULL,
		RESPONSABLE				BOOLEAN NOT NULL DEFAULT FALSE,
		
		PRIMARY KEY (ID_COMPETITION, ID_CONTACT),
		FOREIGN KEY (ID_COMPETITION) REFERENCES COMPETITION (ID_COMPETITION) ON UPDATE CASCADE ON DELETE CASCADE,
		FOREIGN KEY (ID_CONTACT) REFERENCES ARCHER (ID_CONTACT) ON UPDATE CASCADE ON DELETE RESTRICT
	);

CREATE TABLE CONCURRENT (
		ID_CONTACT				UUID NOT NULL,
		ID_COMPETITION			UUID NOT NULL,
		ID_CRITERE_CLASSEMENT	UUID NOT NULL,
		
		DEPART					INTEGER,
		TARGET					INTEGER,
		POSITION				INTEGER,
		PRESENCE				BOOLEAN,
		SURCLASSEMENT			BOOLEAN,
	--	ID_BLASON_DISTANCE_BLASONS_ALTERNATIF UUID,
		
		PRIMARY KEY (ID_CONTACT, ID_COMPETITION),
		FOREIGN KEY (ID_CONTACT) REFERENCES ARCHER (ID_CONTACT) ON UPDATE CASCADE ON DELETE CASCADE,
		FOREIGN KEY (ID_COMPETITION) REFERENCES COMPETITION (ID_COMPETITION) ON UPDATE CASCADE ON DELETE CASCADE,
		FOREIGN KEY (ID_CRITERE_CLASSEMENT) REFERENCES CRITERE_CLASSEMENT (ID_CRITERE_CLASSEMENT) ON UPDATE CASCADE ON DELETE RESTRICT,
	--	FOREIGN KEY (ID_BLASON_DISTANCE_BLASONS_ALTERNATIF) REFERENCES BLASON_DISTANCE_BLASONS (ID_BLASON_DISTANCE_BLASONS) ON UPDATE CASCADE ON DELETE RESTRICT
	);
	
CREATE TABLE IF NOT EXISTS OPTIONS_CRITERE_CLASSEMENT (
		ID_CRITERE_CLASSEMENT	UUID NOT NULL,
		ID_CONTACT				UUID NOT NULL,
		ID_COMPETITION			UUID NOT NULL,
		SERIE					INTEGER,
		ID_BLASON				UUID NOT NULL,
		
		PRIMARY KEY (ID_CRITERE_CLASSEMENT, ID_CONTACT, ID_COMPETITION, SERIE),
		FOREIGN KEY (ID_CRITERE_CLASSEMENT) REFERENCES CRITERE_CLASSEMENT (ID_CRITERE_CLASSEMENT) ON UPDATE CASCADE ON DELETE RESTRICT,
		FOREIGN KEY (ID_CONTACT, ID_COMPETITION) REFERENCES CONCURRENT (ID_CONTACT, ID_COMPETITION) ON UPDATE CASCADE ON DELETE CASCADE,
		FOREIGN KEY (ID_BLASON) REFERENCES BLASON (ID_BLASON) ON UPDATE CASCADE ON DELETE RESTRICT
	);
	
CREATE TABLE IF NOT EXISTS SCORE_CONCURRENT (
		ID_SCORE				UUID NOT NULL DEFAULT RANDOM_UUID(),
		TYPE_SCORE				INTEGER NOT NULL,
		ID_CONTACT				UUID NOT NULL,
		ID_COMPETITION			UUID NOT NULL,
		NUMORDRE				INTEGER NOT NULL,
		SCORE					INTEGER,
		PRIMARY KEY (ID_SCORE),
		FOREIGN KEY (ID_CONTACT,ID_COMPETITION) REFERENCES CONCURRENT (ID_CONTACT,ID_COMPETITION) ON UPDATE CASCADE ON DELETE CASCADE
	);
	
CREATE TABLE IF NOT EXISTS PROFILE (
		ID_PROFILE				UUID NOT NULL DEFAULT RANDOM_UUID(),
		INTITULE				VARCHAR(128) NOT NULL,
		
		ID_ENTITE				UUID,
		
		PRIMARY KEY (ID_PROFILE),
		FOREIGN KEY (ID_ENTITE) REFERENCES ENTITE (ID_ENTITE) ON UPDATE CASCADE ON DELETE RESTRICT
	);
	
-- Tarification des compétitions
CREATE TABLE IF NOT EXISTS TARIF (
		ID_TARIF				UUID NOT NULL DEFAULT RANDOM_UUID(),
		ID_PROFILE				UUID NOT NULL,
		INTITULE				VARCHAR(128) NOT NULL,
		TARIF					DECIMAL(16,2) NOT NULL,
		
		PRIMARY KEY (ID_TARIF),
		FOREIGN KEY (ID_PROFILE) REFERENCES PROFILE (ID_PROFILE) ON UPDATE CASCADE ON DELETE CASCADE
	);
	
CREATE TABLE IF NOT EXISTS CATEGORIE_TARIF (
		ID_TARIF				UUID NOT NULL,
		ID_JEUX_CRITERES_DISCRIMINANT	UUID NOT NULL,
		
		PRIMARY KEY (ID_TARIF, ID_JEUX_CRITERES_DISCRIMINANT),
		FOREIGN KEY (ID_TARIF) REFERENCES TARIF (ID_TARIF) ON UPDATE CASCADE ON DELETE CASCADE,
		FOREIGN KEY (ID_JEUX_CRITERES_DISCRIMINANT) REFERENCES JEUX_CRITERES_DISCRIMINANT (ID_JEUX_CRITERES_DISCRIMINANT) ON UPDATE CASCADE ON DELETE CASCADE
	);
	
CREATE TABLE IF NOT EXISTS GESTIONNAIRE_PROFILE (
		ID_CONTACT				UUID NOT NULL,
		ID_PROFILE				UUID NOT NULL,
		
		PRIMARY KEY (ID_CONTACT, ID_PROFILE),
		FOREIGN KEY (ID_CONTACT) REFERENCES CONTACT (ID_CONTACT) ON UPDATE CASCADE ON DELETE CASCADE,
		FOREIGN KEY (ID_PROFILE) REFERENCES PROFILE (ID_PROFILE) ON UPDATE CASCADE ON DELETE CASCADE
	);
